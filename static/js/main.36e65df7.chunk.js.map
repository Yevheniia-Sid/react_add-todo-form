{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","initTodos","completed","App","useState","todoTitle","setTodoTitle","todoTitleError","setTodoTitleError","todoUserId","setTodoUserId","todoUserIdError","setTodoUserIdError","setTodos","action","method","onSubmit","event","preventDefault","todosIds","newTodo","Math","max","prevState","htmlFor","type","placeholder","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36e65df7.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className=\"TodoInfo TodoInfo--completed\"\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const initTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoTitleError, setTodoTitleError] = useState(false);\n  const [todoUserId, setTodoUserId] = useState(0);\n  const [todoUserIdError, setTodoUserIdError] = useState(false);\n  const [todos, setTodos] = useState(initTodos);\n\n  function handleOnAdd(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (!todoTitle) {\n      setTodoTitleError(true);\n    }\n\n    if (!todoUserId) {\n      setTodoUserIdError(true);\n    }\n\n    if (!todoTitle || !todoUserId) {\n      return;\n    }\n\n    const todosIds = todos.map(({ id }) => id);\n    const maxTodosId = Math.max(...todosIds);\n    const newTodo = {\n      id: maxTodosId + 1,\n      title: todoTitle,\n      completed: false,\n      userId: todoUserId,\n      user: getUserById(todoUserId),\n    };\n\n    setTodos((prevState) => [...prevState, newTodo]);\n    setTodoUserId(0);\n    setTodoTitle('');\n  }\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setTodoTitleError(false);\n    setTodoTitle(event.target.value);\n  }\n\n  function handleUserChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setTodoUserIdError(false);\n    setTodoUserId(+event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleOnAdd}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"TitleLabel\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"TitleLabel\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleTitleChange}\n          />\n          {todoTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"UserLabel\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"UserLabel\"\n            value={todoUserId}\n            onChange={handleUserChange}\n          >\n            <option\n              value={0}\n              disabled\n              selected\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {todoUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}